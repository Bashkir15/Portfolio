<!DOCTYPE html>
<html>
	<head>
		<meta charset='utf-8'>
		<meta name='viewport' content="width=device-width, initial-scale=1">
		<meta name='description' content="A project for a local smokeshop designed to be a modern rebranding">
		<meta name='keywords' content="Smokeshop Pipes Javascript Developer Modern-Design">

		<title>Fordevv -- Evolution</title>


		<link rel='preload' href='../styles/main.min.css' as="style" onload="this.rel='stylesheet'">

		<noscript>

			<link rel='stylesheet' href='../styles/main.min.css'>
		</noscript>

		<style>
			body .main-container {
				opacity: 0;
				transition: all .4s ease-out;
			}

			body.loaded .main-container {
				opacity: 1;
			}

		</style>
	</head>

	<body>
		<% include ../../shared/preloader %>


		<main class='single-work-study-container main-container'>
			<% include ../../shared/nav %>
			<% include ../../shared/mobile-menu %>
			<header>
				<h1>Evolution</h1>
			</header>

			<section class='single-work-study'>
				<p>I was contracted to take an existing website for a local smokeshop and help them improve their branding a produce a much more modern take on their dated site. They wanted to be able to appeal to a much younger audience while at the same time maintaining a professional appearance</p>

				<ul class='single-work-list'>
					<li>What can I implement to grab Users attention and ensure their return?</li>
					<li>What features make a site seem modern in comparison?</li>
					<li>How can I tie their brand and function to their new site?</li>
				</ul>

				<div class='single-work-list-problem'>
					<p>When I think of attention grabbing and modern, I think of a very clean UI design that is very interactive but not distracting. The animations and state changes of components are very subtle, but nuanced without being overpowering</p>

					<p>I decided to go with a darker, almost smoky color scheme for the landing page where I would be able to display the most pertinent information, their product sections, their services displayed in tabs, their media info with latest tweets and posts, and ways to contact them</p>

					<div class='single-work-list-full-image'>
						<img src='../images/evo-full.png' alt='full evolution landing page'>
					</div>

					<p>With this in place I wanted to provide more indepth information for each of these pieces, so I created an about page to describe more what the business was about</p>

					<p>After doing research on what made a great business about page and how to increase user retention and desire to use your business I was able to come up with a suitable design that told their story, where they came from, and where they are today without being too terse and business like. The ThreeJS animation at the top of the page, a realistic smoke animation, helps tie into their overall brand</p>

					<div class='single-work-list-full-image'>
						<img src='../images/evo-about.png' alt='Evolution About Page'>
					</div>

					<p>Next I moved onto the contact page. This was one of the sections I had to think about the most. Users will decide very quickly if they want to contact the business or not, or even if the page is worth staying on and viewing. With the page being modern I opted to include the contact form lower down on the page moving the content about their locations and phone numbers up because I figured that would be the most likely forms of communication</p>

					<div class='single-work-list-full-image'>
						<img src='../images/evo-contact.png' alt='Evolution Contact Page'>
					</div>
				</div>
			</section>

			<section class='single-work-study-conclusion'>
				<h3>Conclusion</h3>

				<p>This website is currently still under development as their are more sections to add. A page featuring their newsletter and current deals need to be added, as well as a scheduled Node application to send out texts to those who have subscribed for their text deals. At a later date a Shopify plugin will be included to allow orders to order things from their site directly</p>

				<p>This was a fun project that I build with Vanilla ES6 Javascript. In the future the shop page will be seperate from the main site itself and will be build with React to decouple to application code and provide a easier way to handle application state and the quick manipulation of data for end users</p>

				<p>To see the working application or the code on github check out the links below</p>

				<div class='single-work-study-links'>
					<a href='http://www.github.com/Bashkir15/Evolution' target="_blank">
						<span class='icon-github'></span>
					</a>

					<a href='evolution-link' target="_blank">
						Evolution
					</a>
				</div>
			</section>
		</main>
		<script type='text/javascript'>
			let animation;

			init();

			function init() {
				let canvas = document.querySelector('.preloader-canvas');
				let t = 0;
				let w = canvas.width = window.innerWidth;
				let h = canvas.height = window.innerHeight;

				let context = canvas.getContext('2d');
				context.globalCompositeOperate = 'lighter';

				animate();

				function animate() {
					context.clearRect(0, 0, w, h);

					t += 1;

					for (let i = 0; i < 5000; i++) {
						let f = 0.05 + ((Math.sin(t * 0.00002) / Math.PI) * 0.2);
						let r = (Math.min(w, h)) * (Math.cos((t + i) * f) / Math.PI * 1.5);

						let x = 0.5 + (Math.sin(i) * r + (canvas.width / 2)) | 0;
						let y = 0.5 + (Math.cos(i) * r + (canvas.height / 2)) | 0;

						context.fillStyle = 'rgba(0, 255, 255, 0.5)';
						context.fillRect(x, y, 1.5, 1.5);
					}

					animation = setTimeout(animate, 16);

				}

				function handleDoc() {
					setTimeout(finishLoad, 1500);
				}

				function finishLoad() {
					let canvas = document.querySelector('.preloader-canvas');

					document.body.classList.add('loaded');
					canvas.parentElement.classList.add('finished');
					canvas.parentElement.removeChild(canvas);
					clearTimeout(animation);

					document.removeEventListener('DOMContentLoaded', handleDoc);
				}

				document.addEventListener('DOMContentLoaded', handleDoc);
			}
		</script>
		<script src='../scripts/main.build.min.js' ref='preload'></script>
	</body>
</html>

